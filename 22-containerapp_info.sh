#!/bin/bash

# Function to check if an Azure session is active
check_session() {
    az account show &> /dev/null
    if [ $? -eq 0 ]; then
        echo "An active Azure session is already present."
        display_container_apps
    else
        echo "No active Azure session found."
        display_login_options
    fi
}

# Function to display Azure login options
display_login_options() {
    echo "Please choose one of the login options below:"
    echo "-------------------------------------------"
    echo "1. Log in using a device code (browser-based login):"
    echo "   az login --use-device-code"
}

# Function to display container apps and allow the user to select one
display_container_apps() {
    echo "Please select a resource group:"
    
    # Extract and display the list of resource groups
    RESOURCE_GROUPS=$(az group list --query '[].name' -o tsv)
    PS3='Please enter your choice: '
    select RESOURCE_GROUP in $RESOURCE_GROUPS; do
        if [[ -n $RESOURCE_GROUP ]]; then
            echo "You selected resource group: $RESOURCE_GROUP"
            list_and_select_container_apps
            break
        else
            echo "Invalid selection. Please try again."
        fi
    done
}

# Function to list container apps and allow the user to select one
list_and_select_container_apps() {
    echo "Listing container apps in resource group: $RESOURCE_GROUP"

    # List container apps in the selected resource group
    az containerapp list --resource-group "$RESOURCE_GROUP" --query '[].name' -o tsv > ./21/container_apps.txt

    # Display container apps
    cat ./21/container_apps.txt

    echo "Please select a container app:"
    PS3='Please enter your choice: '
    select CONTAINER_APP in $(cat ./21/container_apps.txt); do
        if [[ -n $CONTAINER_APP ]]; then
            echo "You selected container app: $CONTAINER_APP"
            show_container_app_details
            break
        else
            echo "Invalid selection. Please try again."
        fi
    done
}

# Function to display details of the selected container app and save to file
show_container_app_details() {
    echo "Retrieving details for container app: $CONTAINER_APP in resource group: $RESOURCE_GROUP"
    
    # Retrieve and display container app details
    az containerapp show --name "$CONTAINER_APP" --resource-group "$RESOURCE_GROUP" > ./21/$CONTAINER_APP-details.txt
    
    echo "Details of container app $CONTAINER_APP:"
    cat ./21/$CONTAINER_APP-details.txt
}

# Main script execution
check_session
