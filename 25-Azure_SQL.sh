#!/bin/bash

# Display SQL Management Menu
display_menu() {
  echo "===================================="
  echo "     Azure SQL Server Explorer      "
  echo "===================================="
  echo "1. List SQL Servers"
  echo "2. List Databases for a SQL Server"
  echo "3. List Firewall Rules for a SQL Server"
  echo "4. List SQL Server AD Administrators"
  echo "q. Quit"
  echo "===================================="
  echo
}

# Function to execute PowerShell commands for listing SQL Servers
list_sql_servers() {
  echo "Listing SQL Servers..."
  pwsh -Command "Get-AzSQLServer"
}

# Function to list SQL Databases for a specific server
list_sql_databases() {
  read -p "Enter SQL Server Name: " SERVER_NAME
  read -p "Enter Resource Group Name: " RESOURCE_GROUP_NAME
  echo "Listing databases for SQL Server '$SERVER_NAME' in Resource Group '$RESOURCE_GROUP_NAME'..."
  pwsh -Command "Get-AzSqlDatabase -ServerName $SERVER_NAME -ResourceGroupName $RESOURCE_GROUP_NAME"
}

# Function to list SQL Firewall rules for a specific server
list_firewall_rules() {
  read -p "Enter SQL Server Name: " SERVER_NAME
  read -p "Enter Resource Group Name: " RESOURCE_GROUP_NAME
  echo "Listing Firewall Rules for SQL Server '$SERVER_NAME' in Resource Group '$RESOURCE_GROUP_NAME'..."
  pwsh -Command "Get-AzSqlServerFirewallRule -ServerName $SERVER_NAME -ResourceGroupName $RESOURCE_GROUP_NAME"
}

# Function to list SQL Server AD Administrators
list_ad_admins() {
  read -p "Enter SQL Server Name: " SERVER_NAME
  read -p "Enter Resource Group Name: " RESOURCE_GROUP_NAME
  echo "Listing Active Directory Administrators for SQL Server '$SERVER_NAME' in Resource Group '$RESOURCE_GROUP_NAME'..."
  pwsh -Command "Get-AzSqlServerActiveDirectoryAdministrator -ServerName $SERVER_NAME -ResourceGroupName $RESOURCE_GROUP_NAME"
}

# Main function to run the selected script
run_script() {
  case $1 in
    1) list_sql_servers ;;
    2) list_sql_databases ;;
    3) list_firewall_rules ;;
    4) list_ad_admins ;;
    q) echo "Quitting..."; exit 0 ;;
    *) echo "Invalid option. Please select a valid option." ;;
  esac
}

# Display the menu and execute the selected option
while true; do
  display_menu
  read -p "Enter your choice: " CHOICE
  run_script $CHOICE
done
